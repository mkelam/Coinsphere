# Production Dockerfile for Coinsphere Frontend
FROM node:22-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Install necessary build tools
RUN apk add --no-cache libc6-compat

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci && npm cache clean --force

# Build the application
FROM base AS builder
WORKDIR /app

# Copy dependencies
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Accept build arguments for environment variables
ARG VITE_API_URL
ARG VITE_WS_URL

# Set environment variables
ENV VITE_API_URL=$VITE_API_URL
ENV VITE_WS_URL=$VITE_WS_URL

# Build the application
RUN npm run build

# Production image - Serve with Nginx
FROM nginx:alpine AS runner

# Copy custom nginx config
COPY deployment/nginx-frontend.conf /etc/nginx/conf.d/default.conf

# Copy built application from builder
COPY --from=builder /app/dist /usr/share/nginx/html

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S coinsphere -u 1001

# Set permissions
RUN chown -R coinsphere:nodejs /usr/share/nginx/html && \
    chown -R coinsphere:nodejs /var/cache/nginx && \
    chown -R coinsphere:nodejs /var/log/nginx && \
    chown -R coinsphere:nodejs /etc/nginx/conf.d

RUN touch /var/run/nginx.pid && \
    chown -R coinsphere:nodejs /var/run/nginx.pid

# Switch to non-root user
USER coinsphere

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:80/health || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
