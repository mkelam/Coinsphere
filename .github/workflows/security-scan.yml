name: Security Scanning

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main, develop]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  dependency-audit:
    name: NPM Audit - Dependency Security
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: [backend, frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.directory }}/package-lock.json

      - name: Install dependencies (${{ matrix.directory }})
        working-directory: ./${{ matrix.directory }}
        run: npm ci

      - name: Run npm audit (${{ matrix.directory }})
        working-directory: ./${{ matrix.directory }}
        run: |
          npm audit --audit-level=moderate --json > audit-report.json || true
          npm audit --audit-level=moderate

      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-${{ matrix.directory }}
          path: ${{ matrix.directory }}/audit-report.json

  typescript-check:
    name: TypeScript Type Safety
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: [backend, frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.directory }}/package-lock.json

      - name: Install dependencies (${{ matrix.directory }})
        working-directory: ./${{ matrix.directory }}
        run: npm ci

      - name: TypeScript check (${{ matrix.directory }})
        working-directory: ./${{ matrix.directory }}
        run: npx tsc --noEmit

  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better secret detection

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-2.0, GPL-3.0

  sast-semgrep:
    name: SAST - Semgrep
    runs-on: ubuntu-latest

    container:
      image: returntocorp/semgrep

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Semgrep
        run: semgrep ci --config=auto --json --output=semgrep-report.json || true

      - name: Upload Semgrep report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep-report.json

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-audit, typescript-check, secrets-scan, codeql-analysis]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Security Summary
        run: |
          echo "## Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ TypeScript type checking completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Dependency audit completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ Secrets scanning completed" >> $GITHUB_STEP_SUMMARY
          echo "✅ CodeQL analysis completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "See job details for any security findings." >> $GITHUB_STEP_SUMMARY
